services:
  # ────────────────────────────
  #  PHP-FPM + Laravel application
  # ────────────────────────────
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: kynderway_st_3-app:latest
    container_name: kynderway_app
    environment:
      APP_ENV: local
      APP_DEBUG: "true"
      APP_KEY: ${APP_KEY:-base64:INVALIDKEY}  # override in your .env
      DB_HOST: db
      DB_DATABASE: kynderway
      DB_USERNAME: kynderway
      DB_PASSWORD: secret
      QUEUE_CONNECTION: redis
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      REDIS_HOST: redis
    volumes:
      - ./:/var/www                # code hot-reload (dev only)
      - vendor:/var/www/vendor     # keep Composer deps intact
    depends_on:
      - db
      - redis
    restart: unless-stopped

  # ────────────────────────────
  #  Queue worker
  # ────────────────────────────
  queue:
    image: kynderway_st_3-app:latest
    container_name: kynderway_queue
    command: php artisan queue:work --tries=3 --timeout=90
    volumes:
      - ./:/var/www
      - vendor:/var/www/vendor
    depends_on:
      - redis
    restart: unless-stopped

  # ────────────────────────────
  #  Nginx reverse proxy
  # ────────────────────────────
  nginx:
    image: nginx:1.25-alpine
    container_name: kynderway_nginx
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    restart: unless-stopped

  # ────────────────────────────
  #  MySQL database
  # ────────────────────────────
  db:
    image: mysql:8.0
    container_name: kynderway_db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: kynderway
<<<<<<< Updated upstream
      MYSQL_USER: kynderway
      MYSQL_PASSWORD: secret
=======
>>>>>>> Stashed changes
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3306:3306"
    restart: unless-stopped

  # ────────────────────────────
  #  Redis (cache + queues)
  # ────────────────────────────
  redis:
    image: redis:7.2-alpine
    container_name: kynderway_redis
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped

  # ────────────────────────────
  #  Prometheus (system metrics)
  # ────────────────────────────
  prometheus:
    image: prom/prometheus:v2.51.0
    container_name: kynderway_prometheus
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/etc/prometheus
    depends_on:
      - app
    restart: unless-stopped

  # ────────────────────────────
  #  Grafana (dashboards)
  # ────────────────────────────
  grafana:
    image: grafana/grafana:11.0.0
    container_name: kynderway_grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped

# ────────────────────────────
#  Named volumes
# ────────────────────────────
volumes:
  vendor:            # keeps Composer deps safe even when code is mounted
  db_data:
  redis_data:
  prometheus_data:
  grafana_data: